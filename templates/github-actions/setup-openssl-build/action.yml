name: 'Setup OpenSSL Build Environment'
description: 'Sets up cross-platform OpenSSL build environment with Conan'
inputs:
  compiler:
    description: 'Compiler to use (gcc-11, clang-14, msvc193)'
    required: true
  architecture: 
    description: 'Target architecture (x86_64, aarch64, arm64)'
    required: true
  cross_compile:
    description: 'Enable cross-compilation'
    required: false
    default: 'false'
  enable_fips:
    description: 'Enable FIPS mode'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Setup build environment
      shell: bash
      run: |
        echo "Setting up OpenSSL build for ${{ inputs.compiler }} on ${{ inputs.architecture }}"
        
        # Install system dependencies
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build perl python3 python3-pip pkg-config zlib1g-dev
        elif [[ "${{ runner.os }}" == "Windows" ]]; then
          choco install -y cmake ninja perl python3
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          brew install cmake ninja perl python3
        fi
        
        # Install Conan
        pip3 install conan==2.0.*
        conan profile detect --force
        
        # Configure environment variables
        echo "COMPILER=${{ inputs.compiler }}" >> $GITHUB_ENV
        echo "ARCHITECTURE=${{ inputs.architecture }}" >> $GITHUB_ENV
        echo "CROSS_COMPILE=${{ inputs.cross_compile }}" >> $GITHUB_ENV
        echo "ENABLE_FIPS=${{ inputs.enable_fips }}" >> $GITHUB_ENV
        
        # Set compiler-specific environment
        case "${{ inputs.compiler }}" in
          gcc-11)
            echo "CC=gcc-11" >> $GITHUB_ENV
            echo "CXX=g++-11" >> $GITHUB_ENV
            ;;
          clang-14)
            echo "CC=clang-14" >> $GITHUB_ENV
            echo "CXX=clang++-14" >> $GITHUB_ENV
            ;;
          msvc193)
            echo "CC=cl" >> $GITHUB_ENV
            echo "CXX=cl" >> $GITHUB_ENV
            ;;
        esac