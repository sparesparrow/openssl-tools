{
  "version": "1.0.0",
  "commands": [
    {
      "id": "openssl.build-all",
      "title": "Build All Components",
      "description": "Build all OpenSSL components with database tracking",
      "command": "./scripts/build/build-all-components.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üî®",
        "category": "Build",
        "shortcut": "Ctrl+Shift+B"
      }
    },
    {
      "id": "openssl.upload-registries",
      "title": "Upload to Registries",
      "description": "Upload all components to configured registries",
      "command": "./scripts/upload/upload-to-registries.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üì¶",
        "category": "Distribution",
        "shortcut": "Ctrl+Shift+U"
      }
    },
    {
      "id": "openssl.db-status",
      "title": "Database Status",
      "description": "Show recent build status from database",
      "command": "docker exec -it openssl-build-db psql -U openssl_admin -d openssl_builds -c \"SELECT c.name, b.status, b.build_date FROM builds b JOIN components c ON b.component_id = c.id ORDER BY b.build_date DESC LIMIT 10;\"",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üêò",
        "category": "Database",
        "shortcut": "Ctrl+Shift+D"
      }
    },
    {
      "id": "openssl.clean-cache",
      "title": "Clean Build Cache",
      "description": "Clean Conan cache and restart fresh",
      "command": "conan remove '*' -f && echo 'Cache cleaned successfully'",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üßπ",
        "category": "Maintenance",
        "shortcut": "Ctrl+Shift+C"
      }
    },
    {
      "id": "openssl.security-scan",
      "title": "Security Scan",
      "description": "Run security analysis on all components",
      "command": "./scripts/security/run-security-scan.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üîí",
        "category": "Security",
        "shortcut": "Ctrl+Shift+S"
      }
    },
    {
      "id": "openssl.benchmark",
      "title": "Performance Benchmark",
      "description": "Run performance benchmarks",
      "command": "./scripts/testing/run-benchmarks.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üìä",
        "category": "Testing",
        "shortcut": "Ctrl+Shift+P"
      }
    },
    {
      "id": "openssl.generate-report",
      "title": "Generate Report",
      "description": "Generate comprehensive pipeline report",
      "command": "./scripts/reporting/generate-pipeline-report.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üìã",
        "category": "Reporting",
        "shortcut": "Ctrl+Shift+R"
      }
    },
    {
      "id": "openssl.test-component",
      "title": "Test Component",
      "description": "Test a specific component",
      "command": "./scripts/testing/test-component.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üß™",
        "category": "Testing",
        "shortcut": "Ctrl+Shift+T",
        "prompt": "Which component to test? (crypto/ssl/tools)"
      }
    },
    {
      "id": "openssl.db-backup",
      "title": "Database Backup",
      "description": "Create database backup",
      "command": "./scripts/database/backup-database.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üíæ",
        "category": "Maintenance"
      }
    },
    {
      "id": "openssl.deploy-production",
      "title": "Deploy to Production",
      "description": "Deploy components to production registry",
      "command": "./scripts/deployment/deploy-production.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üöÄ",
        "category": "Deployment",
        "confirmation": "Are you sure you want to deploy to production?"
      }
    }
  ],
  "quickActions": [
    {
      "id": "openssl.quick-build",
      "title": "Quick Build",
      "description": "Fast build with cached dependencies",
      "command": "./scripts/build/build-components-no-db.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "‚ö°",
        "category": "Build",
        "shortcut": "Ctrl+Q+B"
      }
    },
    {
      "id": "openssl.quick-test",
      "title": "Quick Test",
      "description": "Run basic component tests",
      "command": "./scripts/testing/quick-test.sh",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üß™",
        "category": "Testing",
        "shortcut": "Ctrl+Q+T"
      }
    },
    {
      "id": "openssl.quick-status",
      "title": "Quick Status",
      "description": "Show pipeline status summary",
      "command": "echo 'üìä Pipeline Status:' && docker ps | grep openssl && conan search 'openssl-*'",
      "args": [],
      "options": {
        "cwd": "${workspaceFolder}",
        "group": "openssl",
        "icon": "üìä",
        "category": "Status",
        "shortcut": "Ctrl+Q+S"
      }
    }
  ],
  "contextMenus": [
    {
      "fileTypes": ["conanfile.py"],
      "actions": [
        {
          "id": "conanfile.create-package",
          "title": "Create Package",
          "command": "conan create . --profile:build=default --profile:host=default -s build_type=Release",
          "args": []
        },
        {
          "id": "conanfile.test-package",
          "title": "Test Package",
          "command": "conan test test_package . --profile:build=default --profile:host=default",
          "args": []
        }
      ]
    },
    {
      "fileTypes": ["*.sh"],
      "actions": [
        {
          "id": "shell.make-executable",
          "title": "Make Executable",
          "command": "chmod +x {{file}}",
          "args": []
        },
        {
          "id": "shell.run-script",
          "title": "Run Script",
          "command": "./{{file}}",
          "args": []
        }
      ]
    }
  ]
}
