name: JFrog Artifactory Integration

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual JFrog integration run'
        required: false
        default: 'manual-trigger'
        type: string

# Modern security best practices
permissions:
  contents: read
  actions: read
  packages: write
  id-token: write

# Prevent concurrent runs of the same workflow
concurrency:
  group: jfrog-artifactory-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-publish:
    timeout-minutes: 45  # Prevent long-running builds
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Conan
      run: |
        pip install conan
        
    - name: Configure Conan
      run: |
        # Add JFrog Artifactory remote
        conan remote add openssl-tools-conan ${{ vars.CONAN_REPOSITORY_URL }}
        
        # Login to JFrog Artifactory
        conan remote login -p ${{ secrets.JFROG_ARTIFACTORY_TOKEN }} openssl-tools-conan sparesparrow
        
        # List remotes to verify
        conan remote list
        
    - name: Build with Conan
      run: |
        # Create build directory
        mkdir build && cd build
        
        # Install dependencies
        conan install .. --build=missing
        
        # Build the project
        conan build ..
        
    - name: Create Conan package
      run: |
        cd build
        conan create .. openssl-tools/stable --build=missing
        
    - name: Upload to JFrog Artifactory
      run: |
        # Upload the package to JFrog Artifactory
        conan upload openssl-tools/stable -r openssl-tools-conan --all --confirm
        
    - name: Verify upload
      run: |
        # Search for the uploaded package
        conan search openssl-tools -r openssl-tools-conan

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-publish
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to JFrog Artifactory Docker Registry
      run: |
        echo ${{ secrets.JFROG_ARTIFACTORY_TOKEN }} | docker login ${{ secrets.JFROG_ARTIFACTORY_URL }} -u sparesparrow --password-stdin
        
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.JFROG_ARTIFACTORY_URL }}/docker-local/openssl-tools:latest .
        docker push ${{ secrets.JFROG_ARTIFACTORY_URL }}/docker-local/openssl-tools:latest

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-publish
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install JFrog CLI
      run: |
        curl -fL https://install-cli.jfrog.io | sh
        sudo chmod +x /usr/local/bin/jf
        
    - name: Configure JFrog CLI
      run: |
        jf config add --openssl-tools-conan-url=${{ secrets.JFROG_ARTIFACTORY_URL }} \
                      --user=sparesparrow \
                      --password=${{ secrets.JFROG_ARTIFACTORY_TOKEN }} \
                      --interactive=false
                      
    - name: Security scan with JFrog Xray
      run: |
        # Scan for vulnerabilities
        jf rt scan openssl-tools-conan --format=json --output=scan-results.json
        
    - name: Upload scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: scan-results.json
