name: Basic OpenSSL Integration

on:
  repository_dispatch:
    types: [openssl-build-triggered]
  workflow_dispatch:
    inputs:
      openssl_branch:
        description: 'OpenSSL branch to test (default: main)'
        required: false
        default: 'main'
      openssl_repo:
        description: 'OpenSSL repository (default: sparesparrow/openssl)'
        required: false
        default: 'sparesparrow/openssl'
  schedule:
    # Run daily at 2 AM UTC to test integration
    - cron: '0 2 * * *'

jobs:
  build-openssl-with-conan:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout openssl-tools
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      
      - name: Install Conan
        run: |
          pip install conan>=2.0
          conan --version
      
      - name: Configure Conan
        run: |
          conan profile detect --force
          conan config init
          conan config set general.revisions_enabled=1
        continue-on-error: true
      
      - name: Checkout OpenSSL source
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.openssl_repo || 'sparesparrow/openssl' }}
          ref: ${{ github.event.inputs.openssl_branch || 'main' }}
          path: openssl-src
      
      - name: Copy conanfile.py to OpenSSL source
        run: |
          echo "üìã Copying conanfile.py to OpenSSL source..."
          cp conanfile.py openssl-src/
          ls -la openssl-src/conanfile.py
      
      - name: Validate OpenSSL source structure
        run: |
          echo "üîç Validating OpenSSL source structure..."
          cd openssl-src
          
          # Check for essential OpenSSL files
          if [ -f "VERSION.dat" ]; then
            echo "‚úÖ VERSION.dat found"
            head -5 VERSION.dat
          else
            echo "‚ùå VERSION.dat missing"
            exit 1
          fi
          
          if [ -f "config" ] || [ -f "Configure" ]; then
            echo "‚úÖ Configure script found"
          else
            echo "‚ùå Configure script missing"
            exit 1
          fi
          
          # Check for source directories
          for dir in crypto ssl apps include; do
            if [ -d "$dir" ]; then
              echo "‚úÖ $dir directory found"
            else
              echo "‚ùå $dir directory missing"
              exit 1
            fi
          done
      
      - name: Test conanfile.py compatibility
        run: |
          echo "üîß Testing conanfile.py with actual OpenSSL source..."
          cd openssl-src
          
          # Test conanfile.py import and basic functionality
          python3 -c "
          import sys
          sys.path.insert(0, '.')
          
          try:
              from conanfile import OpenSSLConan
              print('‚úÖ conanfile.py imports successfully')
              
              conan = OpenSSLConan()
              conan.recipe_folder = '.'
              
              # Test version detection
              conan.set_version()
              print(f'‚úÖ Version detection works: {conan.version}')
              
              # Test basic configuration
              conan.configure()
              print('‚úÖ Basic configuration works')
              
          except Exception as e:
              print(f'‚ùå conanfile.py test failed: {e}')
              import traceback
              traceback.print_exc()
              sys.exit(1)
          "
      
      - name: Build OpenSSL with Conan
        run: |
          echo "üöÄ Building OpenSSL with Conan..."
          cd openssl-src
          
          # Build with minimal, proven configuration
          conan create . --build=missing \
            -o shared=False \
            -o fips=False \
            -o enable_unit_test=False \
            -o no_asm=False \
            -o no_threads=False \
            -o enable_quic=False \
            -o no_deprecated=False
          
          echo "‚úÖ OpenSSL build completed successfully!"
      
      - name: Validate build output
        run: |
          echo "üîç Validating build output..."
          cd openssl-src
          
          # Check if Conan created the package
          if [ -d "test_package/build" ] || [ -d "build" ]; then
            echo "‚úÖ Build artifacts found"
          else
            echo "‚ö†Ô∏è  No build artifacts found (may be normal for some configurations)"
          fi
          
          # List any generated files
          find . -name "*.so" -o -name "*.a" -o -name "*.dll" -o -name "*.dylib" | head -10
      
      - name: Report success to OpenSSL repository
        if: success()
        run: |
          echo "üéâ SUCCESS: OpenSSL + Conan integration working!"
          echo "‚úÖ OpenSSL source structure validated"
          echo "‚úÖ conanfile.py works with OpenSSL source"
          echo "‚úÖ OpenSSL builds successfully with Conan"
          echo "üìù Integration test passed - ready for advanced features"
          
          # TODO: Report status back to OpenSSL repository using GitHub API
          # This would create a commit status or check run in the OpenSSL repo
      
      - name: Report failure to OpenSSL repository
        if: failure()
        run: |
          echo "‚ùå FAILURE: OpenSSL + Conan integration failed!"
          echo "üîç Check the logs above for specific error details"
          echo "üìù Fix the issues before proceeding with advanced features"
          
          # TODO: Report failure status back to OpenSSL repository
          # This would create a failed commit status or check run in the OpenSSL repo