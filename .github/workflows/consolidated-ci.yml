name: Consolidated CI

# Single comprehensive workflow to replace multiple workflows
# This prevents queue backlog by having only one workflow per push

concurrency:
  group: openssl-ci-consolidated-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, master, develop, simplify-openssl-build ]
  pull_request:
    branches: [ main, master, develop, simplify-openssl-build ]
  workflow_dispatch:

env:
  CONAN_USER_HOME: ${{ github.workspace }}/.conan2
  CONAN_COLOR_DISPLAY: 1
  CLICOLOR_FORCE: 1

jobs:
  # Quick validation - always runs first
  validate:
    name: Validate
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Validate repository structure
        run: |
          echo "🔍 Validating openssl-tools structure..."
          test -f conanfile.py || (echo "❌ conanfile.py not found" && exit 1)
          echo "✅ Repository structure valid"
          
      - name: Validate conanfile.py syntax
        run: |
          python3 -m py_compile conanfile.py
          echo "✅ conanfile.py syntax valid"

  # Basic build test - only on main branches or workflow_dispatch
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: validate
    if: contains(fromJSON('["main", "master", "develop", "simplify-openssl-build"]'), github.ref_name)
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Conan
        run: |
          pip install conan==2.0.17
          conan --version
          
      - name: Cache Conan packages
        uses: actions/cache@v4
        with:
          path: ${{ env.CONAN_USER_HOME }}
          key: conan-${{ runner.os }}-${{ hashFiles('conanfile.py') }}
          restore-keys: |
            conan-${{ runner.os }}-
            
      - name: Setup Conan profile
        run: |
          conan profile detect --force
          conan config init
          
      - name: Test Conan build (dry run)
        run: |
          echo "🔨 Testing Conan build..."
          conan create . --profile=default --dry-run
          echo "✅ Conan build test successful"

  # Summary job
  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [validate, build-test]
    if: always()
    timeout-minutes: 2
    steps:
      - name: Generate summary
        run: |
          echo "## 🚀 Consolidated CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Job Results" >> $GITHUB_STEP_SUMMARY
          echo "- Validate: ${{ needs.validate.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build Test: ${{ needs.build-test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Determine overall status
          if [[ "${{ needs.validate.result }}" == "success" ]] && 
             ([[ "${{ needs.build-test.result }}" == "success" ]] || [[ "${{ needs.build-test.result }}" == "skipped" ]]); then
            echo "✅ **CI PASSED**" >> $GITHUB_STEP_SUMMARY
            echo "All essential checks completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **CI FAILED**" >> $GITHUB_STEP_SUMMARY
            echo "Some checks failed - see job details above" >> $GITHUB_STEP_SUMMARY
          fi