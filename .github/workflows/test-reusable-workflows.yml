name: Test Reusable Workflows

on:
  workflow_dispatch:
    inputs:
      test-workflow:
        description: 'Which workflow to test'
        required: true
        type: choice
        options:
          - build-openssl
          - test-integration
          - publish-cloudsmith
          - quality-gates
          - all
        default: 'all'

jobs:
  test-build-openssl:
    name: Test Build OpenSSL Workflow
    if: inputs.test-workflow == 'build-openssl' || inputs.test-workflow == 'all'
    uses: ./.github/workflows/build-openssl.yml
    with:
      version: '3.6.0'
      platform: 'ubuntu-latest'
      fips: false
      shared: false
      enable-sbom: true
    secrets:
      CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

  test-test-integration:
    name: Test Integration Test Workflow
    if: inputs.test-workflow == 'test-integration' || inputs.test-workflow == 'all'
    uses: ./.github/workflows/test-integration.yml
    with:
      test-matrix: |
        {
          "os": ["ubuntu-latest"],
          "profiles": ["default"],
          "versions": ["3.6.0"]
        }
      enable-fips-tests: false
      enable-cross-platform: false
      upload-results: true

  test-quality-gates:
    name: Test Quality Gates Workflow
    if: inputs.test-workflow == 'quality-gates' || inputs.test-workflow == 'all'
    uses: ./.github/workflows/quality-gates.yml
    with:
      artifact-path: './artifacts'
      artifact-name: 'test-artifact'
      enable-sbom: true
      enable-trivy: true
      fail-on-severity: 'HIGH,CRITICAL'
      upload-sarif: false
      upload-artifacts: true

  test-publish-cloudsmith:
    name: Test Publish Cloudsmith Workflow
    if: (inputs.test-workflow == 'publish-cloudsmith' || inputs.test-workflow == 'all') && secrets.CLOUDSMITH_API_KEY != ''
    uses: ./.github/workflows/publish-cloudsmith.yml
    with:
      package-reference: 'openssl/3.6.0'
      artifact-path: './artifacts'
      publish-raw-artifacts: false
      tags: 'openssl,conan,ci,test'
      description: 'Test OpenSSL package'
    secrets:
      CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-build-openssl, test-test-integration, test-quality-gates, test-publish-cloudsmith]
    if: always()
    steps:
      - name: Test Results Summary
        run: |
          echo "## ðŸ§ª Reusable Workflow Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“‹ Test Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Workflow**: ${{ inputs.test-workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cloudsmith API Key**: ${{ secrets.CLOUDSMITH_API_KEY != '' && 'Available' || 'Not Available' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“Š Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Workflow | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build OpenSSL | ${{ needs.test-build-openssl.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test Integration | ${{ needs.test-test-integration.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Quality Gates | ${{ needs.test-quality-gates.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Publish Cloudsmith | ${{ needs.test-publish-cloudsmith.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### âœ… All workflows tested successfully!" >> $GITHUB_STEP_SUMMARY