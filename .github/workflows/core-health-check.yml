name: "Core Health Check"

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.12"
  CONAN_VERSION: "2.0.17"

jobs:
  syntax-check:
    name: "Syntax Validation"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          
      - name: Validate workflow syntax
        run: |
          echo "Checking workflow syntax..."
          python -c "
          import os, yaml, sys
          failed = False
          for root, dirs, files in os.walk('.github/workflows'):
              for file in files:
                  if file.endswith(('.yml', '.yaml')):
                      filepath = os.path.join(root, file)
                      try:
                          with open(filepath, 'r') as f:
                              yaml.safe_load(f)
                          print(f'✅ {filepath}')
                      except Exception as e:
                          print(f'❌ {filepath}: {e}')
                          failed = True
          if failed:
              sys.exit(1)
          "
          
      - name: Check for common issues
        run: |
          echo "Checking for common workflow issues..."
          # Check for workflows without proper triggers
          find .github/workflows -name '*.yml' -o -name '*.yaml' | while read file; do
            if ! grep -q "on:" "$file"; then
              echo "⚠️  $file: Missing 'on:' trigger"
            fi
          done
          
          # Check for workflows with both 'uses' and 'run' in same step
          find .github/workflows -name '*.yml' -o -name '*.yaml' | while read file; do
            if grep -A5 -B5 "uses:" "$file" | grep -q "run:"; then
              echo "⚠️  $file: Potential conflict with 'uses' and 'run' in same step"
            fi
          done
          
      - name: Summary
        run: |
          echo "Core syntax validation complete!"
          echo "If this job passes, your workflows have valid YAML syntax."

  basic-build:
    name: "Basic Build Test"
    runs-on: ubuntu-latest
    needs: syntax-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install Conan
        run: |
          pip install "conan>=${{ env.CONAN_VERSION }}"
          conan --version
          
      - name: Basic environment check
        run: |
          echo "Python version: $(python --version)"
          echo "Conan version: $(conan --version)"
          echo "Git version: $(git --version)"
          echo "OS: $(uname -a)"
          
      - name: Check repository structure
        run: |
          echo "Repository structure check..."
          ls -la
          echo "Workflows: $(find .github/workflows -name '*.yml' -o -name '*.yaml' | wc -l)"
          echo "Python scripts: $(find . -name '*.py' | wc -l)"
          echo "Conan files: $(find . -name 'conanfile.*' | wc -l)"
          
      - name: Test basic functionality
        run: |
          # Test if any Python scripts run without errors
          if [ -f "scripts/security/secrets-audit.py" ]; then
            echo "Testing secrets audit script..."
            python scripts/security/secrets-audit.py || echo "Script needs repository context"
          fi
          
          # Test Conan basic functionality if conanfile exists
          if [ -f "conanfile.py" ]; then
            echo "Testing Conan configuration..."
            conan profile detect --force || true
          fi
          
  security-check:
    name: "Security Check"
    runs-on: ubuntu-latest
    needs: syntax-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'  # Don't fail the build on vulnerabilities for now
          
      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-scan-results
          path: trivy-results.sarif
          retention-days: 30
          
      - name: Security summary
        run: |
          echo "Security scan completed."
          echo "Check the uploaded artifacts for detailed results."

  workflow-status:
    name: "Workflow Status Summary"
    runs-on: ubuntu-latest
    needs: [syntax-check, basic-build, security-check]
    if: always()
    
    steps:
      - name: Job Status Summary
        run: |
          echo "## Workflow Status Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Syntax Check**: ${{ needs.syntax-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Basic Build**: ${{ needs.basic-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Security Check**: ${{ needs.security-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.syntax-check.result }}" = "success" ] && 
             [ "${{ needs.basic-build.result }}" = "success" ] && 
             [ "${{ needs.security-check.result }}" = "success" ]; then
            echo "✅ **All core checks passed!** Your repository is healthy." >> $GITHUB_STEP_SUMMARY
            echo "🎯 **Status**: Green - Ready for development" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some checks failed.** Please review the logs above." >> $GITHUB_STEP_SUMMARY
            echo "🔧 **Action Required**: Fix failing checks" >> $GITHUB_STEP_SUMMARY
          fi
