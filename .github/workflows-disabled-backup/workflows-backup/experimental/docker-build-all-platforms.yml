name: Docker Build All Platforms

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for artifacts (defaults to timestamp-commit)'
        required: false
        default: ''
      upload_artifacts:
        description: 'Upload artifacts to Artifactory'
        type: boolean
        default: true

jobs:
  build-all-platforms:
    strategy:
      matrix:
        include:
          - platform: ubuntu-22.04-gcc
            dockerfile: docker/Dockerfile.ubuntu-builder
            profile: conan-profiles/ci-linux-gcc.profile
          - platform: ubuntu-22.04-clang
            dockerfile: docker/Dockerfile.ubuntu-builder
            profile: conan-profiles/ci-linux-clang.profile
          - platform: windows-2022
            dockerfile: docker/Dockerfile.windows-builder
            profile: conan-profiles/openssl-tools-windows.profile
          - platform: macos-x86_64
            dockerfile: docker/Dockerfile.macos-builder
            profile: conan-profiles/ci-macos-x64.profile
          - platform: macos-arm64
            dockerfile: docker/Dockerfile.macos-builder
            profile: conan-profiles/ci-macos-arm64.profile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Building version: $VERSION"

      - name: Build OpenSSL in Docker
        run: |
          docker build \
            --build-arg PROFILE_PATH=${{ matrix.profile }} \
            --build-arg VERSION=${{ env.VERSION }} \
            --tag openssl-${{ matrix.platform }}:${{ env.VERSION }} \
            -f ${{ matrix.dockerfile }} \
            .

      - name: Extract artifacts from container
        run: |
          mkdir -p artifacts/${{ matrix.platform }}
          docker run --rm \
            -v $(pwd)/artifacts/${{ matrix.platform }}:/artifacts \
            openssl-${{ matrix.platform }}:${{ env.VERSION }} \
            cp -r /build/artifacts/* /artifacts/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openssl-${{ matrix.platform }}-${{ env.VERSION }}
          path: artifacts/${{ matrix.platform }}/
          retention-days: 30

  upload-to-artifactory:
    needs: build-all-platforms
    if: github.event.inputs.upload_artifacts == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts/

      - name: Set version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create consolidated artifacts
        run: |
          mkdir -p consolidated-artifacts
          for artifact_dir in all-artifacts/*; do
            if [ -d "$artifact_dir" ]; then
              platform=$(basename "$artifact_dir")
              mkdir -p consolidated-artifacts/$platform
              cp -r $artifact_dir/* consolidated-artifacts/$platform/
            fi
          done

      - name: Upload to Artifactory
        env:
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_REPO: ${{ secrets.ARTIFACTORY_REPO }}
        run: |
          ./scripts/upload-artifacts.sh consolidated-artifacts/ "$VERSION"